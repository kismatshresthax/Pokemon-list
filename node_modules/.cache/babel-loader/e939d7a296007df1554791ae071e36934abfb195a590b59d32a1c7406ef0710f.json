{"ast":null,"code":"import{useEffect,useState}from'react';import{useForm}from'../hook/useForm';import{PokemonContext}from'./PokemonContext';import{jsx as _jsx}from\"react/jsx-runtime\";export const PokemonProvider=_ref=>{let{children}=_ref;const[allPokemons,setAllPokemons]=useState([]);const[globalPokemons,setGlobalPokemons]=useState([]);const[offset,setOffset]=useState(0);// Utilizar CustomHook - useForm\nconst{valueSearch,onInputChange,onResetForm}=useForm({valueSearch:''});// Estados para la aplicación simples\nconst[loading,setLoading]=useState(true);const[active,setActive]=useState(false);// lLamar 50 pokemones a la API\nconst getAllPokemons=async function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:50;const baseURL='https://pokeapi.co/api/v2/';try{const res=await fetch(\"\".concat(baseURL,\"pokemon?limit=\").concat(limit,\"&offset=\").concat(offset));if(!res.ok){throw new Error(\"Failed to fetch Pokemon list. Status: \".concat(res.status));}const data=await res.json();const promises=data.results.map(async pokemon=>{try{const res=await fetch(pokemon.url);if(!res.ok){throw new Error(\"Failed to fetch Pokemon details. Status: \".concat(res.status));}const data=await res.json();return data;}catch(error){console.error(\"Error fetching details for Pokemon with URL \".concat(pokemon.url,\":\"),error);throw error;// Rethrow the error to stop processing this Pokemon\n}});const results=await Promise.all(promises);setAllPokemons(prevPokemons=>[...prevPokemons,...results]);setLoading(false);}catch(error){console.error('Error fetching Pokemon list:',error);setLoading(false);}};// Llamar todos los pokemones\nconst getGlobalPokemons=async()=>{const baseURL='http://pokeapi.co/api/v2/';try{const res=await fetch(\"\".concat(baseURL,\"pokemon?limit=100000&offset=0\"));if(!res.ok){throw new Error(\"Failed to fetch global pokemons. Status: \".concat(res.status));}const data=await res.json();const promises=data.results.map(async pokemon=>{const res=await fetch(pokemon.url);const data=await res.json();return data;});const results=await Promise.all(promises);setGlobalPokemons(results);setLoading(false);}catch(error){console.error('Error fetching global pokemons:',error);setLoading(false);// You can handle the error further if needed, e.g., set an error state.\n}};// Llamar a un pokemon por ID\nconst getPokemonByID=async id=>{const baseURL='https://pokeapi.co/api/v2/';const res=await fetch(\"\".concat(baseURL,\"pokemon/\").concat(id));const data=await res.json();return data;};useEffect(()=>{getAllPokemons();},[offset]);useEffect(()=>{getGlobalPokemons();},[]);// BTN CARGAR MÁS\nconst onClickLoadMore=()=>{setOffset(offset+50);};const[filteredPokemons,setfilteredPokemons]=useState([]);const handleCheckbox=e=>{// setTypeSelected({\n// \t...typeSelected,\n// \t[e.target.name]: e.target.checked,\n// });\nif(e.target.checked){const filteredResults=globalPokemons.filter(pokemon=>pokemon.types.map(type=>type.type.name).includes(e.target.name));setfilteredPokemons([...filteredPokemons,...filteredResults]);}else{const filteredResults=filteredPokemons.filter(pokemon=>!pokemon.types.map(type=>type.type.name).includes(e.target.name));setfilteredPokemons([...filteredResults]);}};return/*#__PURE__*/_jsx(PokemonContext.Provider,{value:{valueSearch,onInputChange,onResetForm,allPokemons,globalPokemons,getPokemonByID,onClickLoadMore,// Loader\nloading,setLoading,// Btn Filter\nactive,setActive,// Filter Container Checkbox\nhandleCheckbox,filteredPokemons},children:children});};","map":{"version":3,"names":["useEffect","useState","useForm","PokemonContext","jsx","_jsx","PokemonProvider","_ref","children","allPokemons","setAllPokemons","globalPokemons","setGlobalPokemons","offset","setOffset","valueSearch","onInputChange","onResetForm","loading","setLoading","active","setActive","getAllPokemons","limit","arguments","length","undefined","baseURL","res","fetch","concat","ok","Error","status","data","json","promises","results","map","pokemon","url","error","console","Promise","all","prevPokemons","getGlobalPokemons","getPokemonByID","id","onClickLoadMore","filteredPokemons","setfilteredPokemons","handleCheckbox","e","target","checked","filteredResults","filter","types","type","name","includes","Provider","value"],"sources":["C:/Users/ganes/Downloads/my-app/my-app/src/context/PokemonProvider.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useForm } from '../hook/useForm';\r\nimport { PokemonContext } from './PokemonContext';\r\n\r\nexport const PokemonProvider = ({ children }) => {\r\n\tconst [allPokemons, setAllPokemons] = useState([]);\r\n\tconst [globalPokemons, setGlobalPokemons] = useState([]);\r\n\tconst [offset, setOffset] = useState(0);\r\n\r\n\t// Utilizar CustomHook - useForm\r\n\tconst { valueSearch, onInputChange, onResetForm } = useForm({\r\n\t\tvalueSearch: '',\r\n\t});\r\n\r\n\t// Estados para la aplicación simples\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [active, setActive] = useState(false);\r\n\r\n\t// lLamar 50 pokemones a la API\r\n\tconst getAllPokemons = async (limit = 50) => {\r\n\t\tconst baseURL = 'https://pokeapi.co/api/v2/';\r\n\t  \r\n\t\ttry {\r\n\t\t  const res = await fetch(`${baseURL}pokemon?limit=${limit}&offset=${offset}`);\r\n\t  \r\n\t\t  if (!res.ok) {\r\n\t\t\tthrow new Error(`Failed to fetch Pokemon list. Status: ${res.status}`);\r\n\t\t  }\r\n\t  \r\n\t\t  const data = await res.json();\r\n\t  \r\n\t\t  const promises = data.results.map(async (pokemon) => {\r\n\t\t\ttry {\r\n\t\t\t  const res = await fetch(pokemon.url);\r\n\t\t\t  if (!res.ok) {\r\n\t\t\t\tthrow new Error(`Failed to fetch Pokemon details. Status: ${res.status}`);\r\n\t\t\t  }\r\n\t  \r\n\t\t\t  const data = await res.json();\r\n\t\t\t  return data;\r\n\t\t\t} catch (error) {\r\n\t\t\t  console.error(`Error fetching details for Pokemon with URL ${pokemon.url}:`, error);\r\n\t\t\t  throw error; // Rethrow the error to stop processing this Pokemon\r\n\t\t\t}\r\n\t\t  });\r\n\t  \r\n\t\t  const results = await Promise.all(promises);\r\n\t  \r\n\t\t  setAllPokemons((prevPokemons) => [...prevPokemons, ...results]);\r\n\t\t  setLoading(false);\r\n\t\t} catch (error) {\r\n\t\t  console.error('Error fetching Pokemon list:', error);\r\n\t\t  setLoading(false);\r\n\t\t}\r\n\t  };\r\n\t  \r\n\t// Llamar todos los pokemones\r\n\tconst getGlobalPokemons = async () => {\r\n\t\tconst baseURL = 'http://pokeapi.co/api/v2/';\r\n\t  \r\n\t\ttry {\r\n\t\t  const res = await fetch(`${baseURL}pokemon?limit=100000&offset=0`);\r\n\t  \r\n\t\t  if (!res.ok) {\r\n\t\t\tthrow new Error(`Failed to fetch global pokemons. Status: ${res.status}`);\r\n\t\t  }\r\n\t  \r\n\t\t  const data = await res.json();\r\n\t  \r\n\t\t  const promises = data.results.map(async (pokemon) => {\r\n\t\t\tconst res = await fetch(pokemon.url);\r\n\t\t\tconst data = await res.json();\r\n\t\t\treturn data;\r\n\t\t  });\r\n\t  \r\n\t\t  const results = await Promise.all(promises);\r\n\t  \r\n\t\t  setGlobalPokemons(results);\r\n\t\t  setLoading(false);\r\n\t\t} catch (error) {\r\n\t\t  console.error('Error fetching global pokemons:', error);\r\n\t\t  setLoading(false);\r\n\t\t  // You can handle the error further if needed, e.g., set an error state.\r\n\t\t}\r\n\t  };\r\n\r\n\t// Llamar a un pokemon por ID\r\n\tconst getPokemonByID = async id => {\r\n\t\tconst baseURL = 'https://pokeapi.co/api/v2/';\r\n\r\n\t\tconst res = await fetch(`${baseURL}pokemon/${id}`);\r\n\t\tconst data = await res.json();\r\n\t\treturn data;\r\n\t};\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAllPokemons();\r\n\t}, [offset]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGlobalPokemons();\r\n\t}, []);\r\n\r\n\t// BTN CARGAR MÁS\r\n\tconst onClickLoadMore = () => {\r\n\t\tsetOffset(offset + 50);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst [filteredPokemons, setfilteredPokemons] = useState([]);\r\n\r\n\tconst handleCheckbox = e => {\r\n\t\t// setTypeSelected({\r\n\t\t// \t...typeSelected,\r\n\t\t// \t[e.target.name]: e.target.checked,\r\n\t\t// });\r\n\r\n\t\tif (e.target.checked) {\r\n\t\t\tconst filteredResults = globalPokemons.filter(pokemon =>\r\n\t\t\t\tpokemon.types\r\n\t\t\t\t\t.map(type => type.type.name)\r\n\t\t\t\t\t.includes(e.target.name)\r\n\t\t\t);\r\n\t\t\tsetfilteredPokemons([...filteredPokemons, ...filteredResults]);\r\n\t\t} else {\r\n\t\t\tconst filteredResults = filteredPokemons.filter(\r\n\t\t\t\tpokemon =>\r\n\t\t\t\t\t!pokemon.types\r\n\t\t\t\t\t\t.map(type => type.type.name)\r\n\t\t\t\t\t\t.includes(e.target.name)\r\n\t\t\t);\r\n\t\t\tsetfilteredPokemons([...filteredResults]);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<PokemonContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tvalueSearch,\r\n\t\t\t\tonInputChange,\r\n\t\t\t\tonResetForm,\r\n\t\t\t\tallPokemons,\r\n\t\t\t\tglobalPokemons,\r\n\t\t\t\tgetPokemonByID,\r\n\t\t\t\tonClickLoadMore,\r\n\t\t\t\t// Loader\r\n\t\t\t\tloading,\r\n\t\t\t\tsetLoading,\r\n\t\t\t\t// Btn Filter\r\n\t\t\t\tactive,\r\n\t\t\t\tsetActive,\r\n\t\t\t\t// Filter Container Checkbox\r\n\t\t\t\thandleCheckbox,\r\n\t\t\t\tfilteredPokemons,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</PokemonContext.Provider>\r\n\t);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}